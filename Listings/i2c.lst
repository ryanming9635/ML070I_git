C51 COMPILER V9.60.0.0   I2C                                                               04/12/2021 16:41:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Output\i2c.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Include) DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Output\i2c.obj)

line level    source

   1          /*****************************************************************************/
   2          /*                                                                                              */
   3          /*  TELI ML070I   MCU                                             */
   4          /*                                                                                              */
   5          /*  I2C.c                                                                       */
   6          /*                                                                                              */
   7          /*****************************************************************************/
   8          
   9          
  10          #include "Config.h"
  11          
  12          #include "reg.h"
  13          #include "typedefs.h"
  14          #include "cpu.h"
  15          #include "I2C.h"
  16          #include "main.h"
  17          #include "printf.h"
*** WARNING C320 IN LINE 44 OF .\Include\printf.h: DEBUG is defined 
  18          #include "CPU.h"
  19          
  20          #define ID_ADDR   0xc5
  21          #define ID_DATA   0xc6
  22          
  23          extern  BYTE  DebugLevel;
  24          
  25          /*****************************************************************************/
  26          /*                                                                           */
  27          /*****************************************************************************/
  28          
  29          //#define I2C_FAST
  30          
  31          #ifdef I2C_FAST
               #define I2Cdelay()
              #else
  34           void I2Cdelay(void)
  35           {
  36   1         BYTE i;
  37   1         for(i=0; i<1; i++){
  38   2         }
  39   1       }
  40          #endif
  41          
  42          void WriteEEP(WORD index, BYTE dat)
  43          {
  44   1        BYTE addr;
  45   1      
  46   1        addr = (EEPROMI2CAddress | (index>>7)) & 0xfe;
  47   1      
  48   1        I2CStart();
  49   1        I2CWriteData(addr);
  50   1        I2CWriteData((BYTE)index);
  51   1        I2CWriteData(dat);
  52   1        I2CStop();
  53   1      
C51 COMPILER V9.60.0.0   I2C                                                               04/12/2021 16:41:57 PAGE 2   

  54   1        #ifdef DEBUG_EEP
                  dPrintf("Write %02xh to [Adrs(%02xh)Index(%02xh)\r\n", (WORD)dat, (WORD)addr, (WORD)index );
                #endif
  57   1      
  58   1        delay(2);
  59   1      }
  60          
  61          BYTE ReadEEP(WORD index)
  62          {
  63   1        BYTE val;
  64   1        BYTE addr;
  65   1      
  66   1        addr = (EEPROMI2CAddress | (index>>7)) & 0xfe;
  67   1      
  68   1        val = ReadI2C(addr,(BYTE)index);
  69   1      
  70   1        #ifdef DEBUG_EEP
                  dPrintf("Read [Adrs:%02xh,Index:%02xh] %02xh\r\n", (WORD)addr, (WORD)index, (WORD)val);
                #endif
  73   1        delay(2);
  74   1        return val;
  75   1      }
  76          
  77          BYTE ReadI2C(BYTE addr, BYTE index)
  78          {
  79   1        BYTE val;
  80   1      
  81   1        I2CStart();
  82   1        I2CWriteData(addr);
  83   1        I2CWriteData(index);
  84   1        I2CStart();
  85   1        I2CWriteData(addr | 0x01);
  86   1        val = I2CReadData();
  87   1        I2CStop();
  88   1      
  89   1        return val;
  90   1      }
  91          
  92          #if (_DEBUG_MESSAGE_Monitor==ON)
  93          
  94          void WriteI2C(BYTE addr, BYTE index, BYTE val)
  95          {
  96   1        I2CStart();
  97   1        I2CWriteData(addr);
  98   1        I2CWriteData(index);
  99   1        I2CWriteData(val);
 100   1        I2CStop();
 101   1      }
 102          #endif
 103          
 104          #define dd()  I2Cdelay()
 105          
 106          void I2CStart()
 107          {
 108   1        I2C_SDA = 1;  dd();
 109   1        I2C_SCL = 1;  dd();
 110   1        I2C_SDA = 0;  dd();
 111   1        I2C_SCL = 0;
 112   1      }
 113          
 114          void I2CStop()
 115          {
C51 COMPILER V9.60.0.0   I2C                                                               04/12/2021 16:41:57 PAGE 3   

 116   1        I2C_SDA = 0;  dd();
 117   1        I2C_SCL = 1;  dd();
 118   1        I2C_SDA = 1;
 119   1      }
 120          
 121          void I2CWriteData(BYTE value)
 122          {
 123   1      
 124   1        I2C_SCL=0;  I2C_SDA=(value & 0x80)? 1:0;  I2C_SCL=1;  dd();
 125   1        I2C_SCL=0;  I2C_SDA=(value & 0x40)? 1:0;  I2C_SCL=1;  dd();
 126   1        I2C_SCL=0;  I2C_SDA=(value & 0x20)? 1:0;  I2C_SCL=1;  dd();
 127   1        I2C_SCL=0;  I2C_SDA=(value & 0x10)? 1:0;  I2C_SCL=1;  dd();
 128   1      
 129   1        I2C_SCL=0;  I2C_SDA=(value & 0x08)? 1:0;  I2C_SCL=1;  dd();
 130   1        I2C_SCL=0;  I2C_SDA=(value & 0x04)? 1:0;  I2C_SCL=1;  dd();
 131   1        I2C_SCL=0;  I2C_SDA=(value & 0x02)? 1:0;  I2C_SCL=1;  dd();
 132   1        I2C_SCL=0;  I2C_SDA=(value & 0x01)? 1:0;  I2C_SCL=1;  dd();
 133   1      
 134   1      
 135   1        I2C_SCL = 0;  // HHY 3.00
 136   1        I2C_SCL = 0;  // HHY 3.00
 137   1        I2C_SCL = 0;  //  I2Cdelay();
 138   1        I2C_SDA = 1;  //  I2Cdelay();
 139   1      
 140   1        I2C_SCL = 1;  // HHY 3.00
 141   1        I2C_SCL = 1;  // HHY 3.00
 142   1        I2C_SCL = 1;  //  I2Cdelay();
 143   1        I2C_SCL = 0;
 144   1      }
 145          
 146          BYTE I2CReadData()
 147          {
 148   1        int i;
 149   1        BYTE value=0;
 150   1      
 151   1        I2C_SDA = 1;  dd();
 152   1        I2C_SCL = 0;
 153   1        
 154   1        for(i=0; i<8; i++) {
 155   2          I2C_SCL = 1;
 156   2          value <<= 1;
 157   2          if(I2C_SDA) value |= 1;
 158   2          I2C_SCL = 0;
 159   2        }
 160   1        dd();
 161   1        
 162   1        I2C_SCL = 1;  // HHY 3.00
 163   1        I2C_SCL = 1;  // HHY 3.00
 164   1        I2C_SCL = 1;
 165   1        I2C_SCL = 0;
 166   1      
 167   1        return value;
 168   1      
 169   1      }
 170          
 171          
 172          void AD5110_I2CWriteData(BYTE value)
 173          {
 174   1      
 175   1        I2C_SCL=0;  I2C_SDA=(value & 0x80)? 1:0;  I2C_SCL=1;  dd();
 176   1        I2C_SCL=0;  I2C_SDA=(value & 0x40)? 1:0;  I2C_SCL=1;  dd();
 177   1        I2C_SCL=0;  I2C_SDA=(value & 0x20)? 1:0;  I2C_SCL=1;  dd();
C51 COMPILER V9.60.0.0   I2C                                                               04/12/2021 16:41:57 PAGE 4   

 178   1        I2C_SCL=0;  I2C_SDA=(value & 0x10)? 1:0;  I2C_SCL=1;  dd();
 179   1      
 180   1        I2C_SCL=0;  I2C_SDA=(value & 0x08)? 1:0;  I2C_SCL=1;  dd();
 181   1        I2C_SCL=0;  I2C_SDA=(value & 0x04)? 1:0;  I2C_SCL=1;  dd();
 182   1        I2C_SCL=0;  I2C_SDA=(value & 0x02)? 1:0;  I2C_SCL=1;  dd();
 183   1        I2C_SCL=0;  I2C_SDA=(value & 0x01)? 1:0;  I2C_SCL=1;  dd();
 184   1      
 185   1      
 186   1        I2C_SCL = 0;  // HHY 3.00
 187   1        I2C_SCL = 0;  // HHY 3.00
 188   1        I2C_SCL = 0;  //  I2Cdelay();
 189   1        I2C_SDA = 1;  //  I2Cdelay();
 190   1        dd();
 191   1        I2C_SCL = 1;  // HHY 3.00
 192   1        I2C_SCL = 1;  // HHY 3.00
 193   1        I2C_SCL = 1;  //  I2Cdelay();
 194   1        I2C_SCL = 0;
 195   1      
 196   1      }
 197          #if (_DEBUG_MESSAGE_Monitor==ON)
 198          
 199          BYTE AD5110_I2CReadData(void)
 200          {
 201   1        int i;
 202   1        BYTE value=0;
 203   1      
 204   1        I2C_SDA = 1;  dd();
 205   1        I2C_SCL = 0;
 206   1        
 207   1        for(i=0; i<8; i++) {
 208   2          I2C_SCL = 1;
 209   2          value <<= 1;
 210   2          if(I2C_SDA) value |= 1;
 211   2      //    dd();
 212   2          I2C_SCL = 0;
 213   2        }
 214   1      
 215   1        I2C_SDA = 1;  //dd();
 216   1        
 217   1        I2C_SCL = 1;  // HHY 3.00
 218   1        I2C_SCL = 1;  // HHY 3.00
 219   1        I2C_SCL = 1;
 220   1        dd();
 221   1        I2C_SCL = 0;
 222   1      //  dd();
 223   1      
 224   1        return value;
 225   1      
 226   1      }
 227          #endif
 228          
 229          void WriteAD5110(WORD index, BYTE dat)
 230          {
 231   1        BYTE addr;
 232   1      
 233   1        addr = (AD5110I2CAddress /*| (index>>7)*/) & 0xfe;
 234   1      
 235   1        I2CStart();
 236   1        AD5110_I2CWriteData(addr);
 237   1        AD5110_I2CWriteData((BYTE)index);
 238   1        AD5110_I2CWriteData(dat);
 239   1        I2CStop();
C51 COMPILER V9.60.0.0   I2C                                                               04/12/2021 16:41:57 PAGE 5   

 240   1      
 241   1        #ifdef DEBUG_EEP
                  dPrintf("Write %02xh to [Adrs(%02xh)Index(%02xh)\r\n", (WORD)dat, (WORD)addr, (WORD)index );
                #endif
 244   1      
 245   1        delay(2);
 246   1      }
 247          #if (_DEBUG_MESSAGE_Monitor==ON)
 248          
 249          BYTE ReadAD5110(WORD index)
 250          {
 251   1        BYTE val;
 252   1        BYTE addr;
 253   1      
 254   1        addr = (AD5110I2CAddress /*| (index>>7)*/) & 0xfe;
 255   1      
 256   1        I2CStart();
 257   1        AD5110_I2CWriteData(addr);
 258   1        AD5110_I2CWriteData(index); 
 259   1      //  AD5110_I2CWriteData(0x01);  
 260   1        AD5110_I2CWriteData(0x00);  
 261   1      
 262   1        I2CStart();
 263   1        AD5110_I2CWriteData(addr | 0x01);
 264   1        val = AD5110_I2CReadData();
 265   1        I2CStop();
 266   1      
 267   1        #ifdef DEBUG_EEP
                  dPrintf("Read [Adrs:%02xh,Index:%02xh] %02xh\r\n", (WORD)addr, (WORD)index, (WORD)val);
                #endif
 270   1        delay(2);
 271   1        return val;
 272   1      }
 273          
 274          #endif
 275          
 276          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    700    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
